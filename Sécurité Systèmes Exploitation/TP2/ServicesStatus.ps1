# Récupérer l'état des services
$services = Get-Service

# Créer une liste pour stocker les données formatées
$htmlData = @()

foreach ($service in $services) {
    # Déterminer la couleur en fonction de l'état du service
    $color = if ($service.Status -eq 'Running') { 'green' } else { 'red' }

    # Créer un objet avec les informations du service
    $htmlData += [PSCustomObject]@{
        Name        = $service.Name
        DisplayName = $service.DisplayName
        Status      = $service.Status
        Color       = $color
    }
}

# Début de l'HTML
$html = @"
<html>
<head>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid black;
            padding: 8px;
            text-align: left;
        }
        .running {
            background-color: green;
            color: white;
        }
        .stopped {
            background-color: red;
            color: white;
        }
    </style>
</head>
<body>
    <h1>État des Services</h1>
    <table>
        <tr>
            <th>Name</th>
            <th>Display Name</th>
            <th>Status</th>
        </tr>
"@

# Ajouter des lignes au tableau
foreach ($data in $htmlData) {
    $statusClass = if ($data.Status -eq 'Running') { 'running' } else { 'stopped' }
    $html += "<tr class='$statusClass'>"
    $html += "<td>$($data.Name)</td>"
    $html += "<td>$($data.DisplayName)</td>"
    $html += "<td>$($data.Status)</td>"
    $html += "</tr>"
}

# Fin de l'HTML
$html += @"
    </table>
</body>
</html>
"@

# Spécifier le chemin du fichier de sortie
$outputPath = "C:\chemin\vers\votre\fichier\etat_services.html"

# Écrire le contenu HTML dans le fichier
$html | Out-File -FilePath $outputPath -Encoding UTF8

# Ouvrir le fichier HTML dans le navigateur par défaut
Start-Process $outputPath